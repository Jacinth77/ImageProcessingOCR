{"id":"ImageProcessingBot","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.poc.ImageProcessingBot","actions":["start","convertPdfToImage","writeToExcel","uploadAttachmentsToAppian","ImgPreprocessing","recognizeText","setData","end"],"conditionalActions":["isPDF"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the modules\n\t * @throws IOException\n\t */\npublic void start() throws IOException {\n    server = JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    falcon = IFalcon.getInstance(this, client);\n    images = JidokaImageSupport.getInstance(this);\n    excel = IExcel.getExcelInstance(this);\n    robotDir = server.getCurrentDir();\n    server.setNumberOfItems(1);\n    server.setCurrentItem(1, images.getTestPng().getDescription());\n}"},{"id":"convertPdfToImage","implementation":"public void convertPdfToImage() throws Exception {\n    Path screenshot = Paths.get(server.getCurrentDir(), \"Dutch.pdf\");\n    server.info(\"Path\" + screenshot);\n    //String sourceDir =\"C:\\\\Users\\\\prasanthraja.c\\\\Downloads\\\\screenshot.pdf\";\n    String sourceDir = screenshot.toString();\n    // converted images from pdf document are saved here\n    String destinationDir = \"C:\\\\Users\\\\prasanthraja.c\\\\Downloads\\\\Converted_PdfFiles_to_Image/\";\n    File sourceFile = new  File(sourceDir);\n    server.info(\"Passed sourceDir\");\n    File destinationFile = new  File(destinationDir);\n    if (!destinationFile.exists()) {\n        destinationFile.mkdir();\n        server.info(\"Folder Created -> \" + destinationFile.getAbsolutePath());\n    }\n    if (sourceFile.exists()) {\n        server.info(\"Images copied to Folder Location: \" + destinationFile.getAbsolutePath());\n        PDDocument document = PDDocument.load(sourceFile);\n        PDFRenderer pdfRenderer = new  PDFRenderer(document);\n        int numberOfPages = document.getNumberOfPages();\n        server.info(\"Total files to be converting -> \" + numberOfPages);\n        String fileName = sourceFile.getName().replace(\".pdf\", \"\");\n        String fileExtension = \"png\";\n        int dpi = 300;\n        for (int i = 0; i < numberOfPages; ++i) {\n            File outPutFile = new  File(destinationDir + fileName + \"_\" + (i + 1) + \".\" + fileExtension);\n            BufferedImage bImage = pdfRenderer.renderImageWithDPI(i, dpi, ImageType.RGB);\n            ImageIO.write(bImage, fileExtension, outPutFile);\n        }\n        document.close();\n        server.info(\"Converted Images are saved at -> \" + destinationFile.getAbsolutePath());\n    } else {\n        server.info(sourceFile.getName() + \" File not exists\");\n    }\n}"},{"id":"writeToExcel","implementation":"public void writeToExcel() throws Exception {\n    // Create a unique name for the Excel file\n    excelName = String.valueOf(docType + new  Date().getTime()) + \".xlsx\";\n    // Final path of the file\n    File file = Paths.get(robotDir, excelName).toFile();\n    String excelPath = file.getAbsolutePath();\n    try (IExcel excel = IExcel.getExcelInstance(this)) {\n        excel.create(excelPath, EExcelType.XLSX);\n        boolean passport = excel.createSheet(\"Passport\", 0);\n        server.info(passport);\n        boolean dl = excel.createSheet(\"DL\", 1);\n        boolean idc = excel.createSheet(\"Identity Card\", 2);\n        if (docType.contains(\"PASSPORT\") && passport) {\n            // Create row\n            Row row = excel.getWorkbook().getSheet(\"Passport\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"Passport No\");\n            //row.createCell(3, CellType.STRING).setCellValue(\"Stock\");\n            // Create header row style\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            // Create the header row font\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            // Apply style\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            //row.getCell(3).setCellStyle(style);\n            // Row content\n            Row row1 = excel.getWorkbook().getSheet(\"Passport\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues[0]);\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues[1]);\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues[2]);\n            // Define the column width\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n        if (docType.contains(\"DRIVING_LICENSE\") && dl) {\n            // Create row\n            Row row = excel.getWorkbook().getSheet(\"DL\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"DL No\");\n            //row.createCell(3, CellType.STRING).setCellValue(\"Stock\");\n            // Create header row style\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            // Create the header row font\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            // Apply style\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            //row.getCell(3).setCellStyle(style);\n            // Row content\n            Row row1 = excel.getWorkbook().getSheet(\"DL\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues[0]);\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues[1]);\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues[2]);\n            // Define the column width\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n        if (docType.contains(\"IDENTITY_CARD\") && idc) {\n            // Create row\n            Row row = excel.getWorkbook().getSheet(\"DL\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"Id No\");\n            //row.createCell(3, CellType.STRING).setCellValue(\"Stock\");\n            // Create header row style\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            // Create the header row font\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            // Apply style\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            //row.getCell(3).setCellStyle(style);\n            // Row content\n            Row row1 = excel.getWorkbook().getSheet(\"Identity Card\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues[0]);\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues[1]);\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues[2]);\n            // Define the column width\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n    } catch (Exception e) {\n        server.error(e);\n    }\n    // Row content\n    server.info(ocrValues.length);\n}"},{"id":"uploadAttachmentsToAppian","implementation":"public void uploadAttachmentsToAppian() throws Exception {\n    String robotDir = server.getCurrentDir();\n    File attachmentsDir = new  File(robotDir);\n    server.debug(\"Looking for files in: \" + attachmentsDir.getAbsolutePath());\n    File[] filesToUpload = Objects.<File[]>requireNonNull(attachmentsDir.listFiles());\n    server.setNumberOfItems(filesToUpload.length);\n    String filename = attachmentsDir.getAbsolutePath() + \"\\\\Documents available for \" + docType + \".xls\";\n    File fileUpload = new  File(filename);\n    String output = uploadExcel(fileUpload);\n    Gson gson = new  Gson();\n    //results.put(\"DocID\", gson.toJson(results));\n    results.put(\"ExcelDocID \", output);\n    results.put(\"IDNumber\", ocrValues[0]);\n    results.put(\"DocType \", ocrValues[1]);\n    results.put(\"FirstName\", ocrValues[2]);\n    results.put(\"LastName\", ocrValues[3]);\n    results.put(\"DOB\", ocrValues[4]);\n    results.put(\"Place\", ocrValues[5]);\n    server.info(\"Upload result \" + results);\n}"},{"id":"ImgPreprocessing","implementation":"public void ImgPreprocessing() throws Exception {\n}"},{"id":"recognizeText","implementation":"public void recognizeText() throws Exception {\n}"},{"id":"setData","implementation":"public void setData() throws Exception {\n}"},{"id":"end","implementation":"/**\n\t\t * End.\n\t\t */\npublic void end() {\n    server.setResultProperties(results);\n}"}],"conditionalActionDetails":[{"id":"isPDF","implementation":"/**\n\t * check file extension\n\t * @throws IOException\n\t * @throws AWTException\n\t */\npublic String isPDF() throws Exception {\n    Path inputFile = Paths.get(server.getCurrentDir(), \"Dutch.pdf\");\n    String fileType = FilenameUtils.getExtension(inputFile.toString());\n    server.info(\"fileType \" + fileType);\n    String expMsg = \"File Error\";\n    if (fileType != null) {\n        if (fileType.contains(\"pdf\")) {\n            return \"Yes\";\n        } else {\n            return \"No\";\n        }\n    }\n    return expMsg;\n}"}],"sdkMethods":[]}