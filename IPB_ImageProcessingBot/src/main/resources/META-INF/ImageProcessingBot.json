{"id":"ImageProcessingBot","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.poc.ImageProcessingBot","actions":["start","convertPdfToImage","writeToExcel","uploadAttachmentsToAppian","ImgPreprocessing","SetDPI","recognizeText","setData","end"],"conditionalActions":["isPDF"],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n\t * Initialize the modules\n\t * @throws IOException\n\t */\npublic void start() throws IOException {\n    server = JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    falcon = IFalcon.getInstance(this, client);\n    images = JidokaImageSupport.getInstance(this);\n    excel = IExcel.getExcelInstance(this);\n    robotDir = server.getCurrentDir();\n    server.setNumberOfItems(1);\n    server.setCurrentItem(1, images.getTestPng().getDescription());\n}"},{"id":"convertPdfToImage","implementation":"public void convertPdfToImage() throws Exception {\n    Path screenshot = Paths.get(server.getCurrentDir(), fileNameinput);\n    server.info(\"Path\" + screenshot);\n    String sourceDir = screenshot.toString();\n    String destinationDir = \"D:\\\\Output file\";\n    File sourceFile = new  File(sourceDir);\n    server.info(\"Passed sourceDir\");\n    File destinationFile = new  File(destinationDir);\n    if (!destinationFile.exists()) {\n        destinationFile.mkdir();\n        server.info(\"Folder Created -> \" + destinationFile.getAbsolutePath());\n    }\n    if (sourceFile.exists()) {\n        server.info(\"Images copied to Folder Location: \" + destinationFile.getAbsolutePath());\n        PDDocument document = PDDocument.load(sourceFile);\n        PDFRenderer pdfRenderer = new  PDFRenderer(document);\n        int numberOfPages = document.getNumberOfPages();\n        server.info(\"Total files to be converting -> \" + numberOfPages);\n        String fileName = sourceFile.getName().replace(\".pdf\", \"\");\n        String fileExtension = \"jpg\";\n        int dpi = 300;\n        for (int i = 0; i < numberOfPages; ++i) {\n            File outPutFile = new  File(destinationDir + fileName + \"_\" + (i + 1) + \".\" + fileExtension);\n            BufferedImage bImage = pdfRenderer.renderImageWithDPI(i, dpi, ImageType.RGB);\n            ImageIO.write(bImage, fileExtension, outPutFile);\n        }\n        document.close();\n        server.info(\"Converted Images are saved at -> \" + destinationFile.getAbsolutePath());\n    } else {\n        server.info(sourceFile.getName() + \" File not exists\");\n    }\n}"},{"id":"writeToExcel","implementation":"public void writeToExcel() throws Exception {\n    excelName = String.valueOf(docType + new  Date().getTime()) + \".xlsx\";\n    File file = Paths.get(robotDir, excelName).toFile();\n    String excelPath = file.getAbsolutePath();\n    try (IExcel excel = IExcel.getExcelInstance(this)) {\n        excel.create(excelPath, EExcelType.XLSX);\n        boolean passport = excel.createSheet(\"Passport\", 0);\n        server.info(passport);\n        boolean dl = excel.createSheet(\"DL\", 1);\n        boolean idc = excel.createSheet(\"Identity Card\", 2);\n        if (docType.contains(\"PASSPORT\") && passport) {\n            Row row = excel.getWorkbook().getSheet(\"Passport\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"Passport No\");\n            row.createCell(3, CellType.STRING).setCellValue(\"Date of Birth\");\n            row.createCell(4, CellType.STRING).setCellValue(\"Place\");\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            Row row1 = excel.getWorkbook().getSheet(\"Passport\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues.get(2));\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues.get(3));\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues.get(0));\n            row1.createCell(3, CellType.STRING).setCellValue(ocrValues.get(4));\n            row1.createCell(4, CellType.STRING).setCellValue(ocrValues.get(5));\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n        if (docType.contains(\"DRIVING_LICENSE\") && dl) {\n            Row row = excel.getWorkbook().getSheet(\"DL\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"DL No\");\n            row.createCell(3, CellType.STRING).setCellValue(\"Date of Birth\");\n            row.createCell(4, CellType.STRING).setCellValue(\"Place\");\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            Row row1 = excel.getWorkbook().getSheet(\"DL\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues.get(2));\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues.get(3));\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues.get(0));\n            row1.createCell(3, CellType.STRING).setCellValue(ocrValues.get(4));\n            row1.createCell(4, CellType.STRING).setCellValue(ocrValues.get(5));\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n        if (docType.contains(\"IDENTITY_CARD\") && idc) {\n            Row row = excel.getWorkbook().getSheet(\"DL\").createRow(0);\n            row.createCell(0, CellType.STRING).setCellValue(\"First Name\");\n            row.createCell(1, CellType.STRING).setCellValue(\"Last Name\");\n            row.createCell(2, CellType.STRING).setCellValue(\"Id No\");\n            row.createCell(3, CellType.STRING).setCellValue(\"Date of Birth\");\n            row.createCell(4, CellType.STRING).setCellValue(\"Place\");\n            XSSFCellStyle style = (XSSFCellStyle) excel.getWorkbook().createCellStyle();\n            style.setAlignment(HorizontalAlignment.CENTER);\n            style.setFillForegroundColor(new  XSSFColor(new  java.awt.Color(101, 166, 255)));\n            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            XSSFFont font = (XSSFFont) excel.getWorkbook().createFont();\n            font.setColor(IndexedColors.WHITE.getIndex());\n            font.setFontName(\"Verdana\");\n            font.setFontHeight(10);\n            style.setFont(font);\n            row.getCell(0).setCellStyle(style);\n            row.getCell(1).setCellStyle(style);\n            row.getCell(2).setCellStyle(style);\n            Row row1 = excel.getWorkbook().getSheet(\"Identity Card\").createRow(1);\n            row1.createCell(0, CellType.STRING).setCellValue(ocrValues.get(2));\n            row1.createCell(1, CellType.STRING).setCellValue(ocrValues.get(3));\n            row1.createCell(2, CellType.STRING).setCellValue(ocrValues.get(0));\n            row1.createCell(3, CellType.STRING).setCellValue(ocrValues.get(4));\n            row1.createCell(4, CellType.STRING).setCellValue(ocrValues.get(5));\n            excel.getSheet().setDefaultColumnWidth(20);\n        }\n    } catch (Exception e) {\n        server.error(e);\n    }\n    server.info(ocrValues.size());\n}"},{"id":"uploadAttachmentsToAppian","implementation":"public void uploadAttachmentsToAppian() throws Exception {\n    String robotDir = server.getCurrentDir();\n    File attachmentsDir = new  File(robotDir);\n    server.debug(\"Looking for files in: \" + attachmentsDir.getAbsolutePath());\n    File[] filesToUpload = Objects.<File[]>requireNonNull(attachmentsDir.listFiles());\n    server.setNumberOfItems(filesToUpload.length);\n    String filename = attachmentsDir.getAbsolutePath() + \"\\\\Documents available for \" + docType + \".xls\";\n    File fileUpload = new  File(filename);\n    String output = uploadExcel(fileUpload);\n    Gson gson = new  Gson();\n    results.put(\"ExcelDocID\", output);\n    results.put(\"IDNumber\", ocrValues.get(0));\n    results.put(\"DocType\", ocrValues.get(1));\n    results.put(\"FirstName\", ocrValues.get(2));\n    results.put(\"LastName\", ocrValues.get(3));\n    results.put(\"DOB\", ocrValues.get(4));\n    results.put(\"Place\", ocrValues.get(5));\n    server.info(\"Upload result \" + results);\n}"},{"id":"ImgPreprocessing","implementation":"public void ImgPreprocessing() throws Exception {\n    SetDPI();\n    String DPI = \"D:\\\\Output file\\\\DPI.jpg\";\n    BufferedImage defaultImage1 = ImageIO.read(Paths.get(DPI).toFile());\n    BufferedImage defaultImage = new  BufferedImage(1550, 1024, defaultImage1.getType());\n    Graphics2D graphic = defaultImage.createGraphics();\n    graphic.drawImage(defaultImage1, 0, 0, 1550, 1024, null);\n    graphic.dispose();\n    Tesseract tesseract = new  Tesseract();\n    tesseract.setDatapath(\"D:\\\\TessData\");\n    tesseract.setLanguage(\"eng\");\n    BufferedImage dest = defaultImage.getSubimage(590, 425, 200, 30);\n    String Country = \"D:\\\\Output file\\\\Country.jpg\";\n    ImageIO.write(dest, \"jpg\", new  File(Country));\n    String CountryName = tesseract.doOCR(new  File(Country));\n    server.info(\"Country :\" + CountryName);\n    BufferedImage first = defaultImage.getSubimage(570, 325, 350, 35);\n    String firstname = \"D:\\\\Output file\\\\first.jpg\";\n    ImageIO.write(first, \"jpg\", new  File(firstname));\n    String firstnamevalue = tesseract.doOCR(new  File(firstname));\n    server.info(\"firstnamevalue :\" + firstnamevalue);\n    BufferedImage Last = defaultImage.getSubimage(570, 250, 300, 35);\n    String Lastname = \"D:\\\\Output file\\\\Last.jpg\";\n    ImageIO.write(Last, \"jpg\", new  File(Lastname));\n    String Lastnamev = tesseract.doOCR(new  File(Lastname));\n    server.info(\"Lastnamev :\" + Lastnamev);\n    BufferedImage number = defaultImage.getSubimage(1120, 168, 350, 65);\n    String number1 = \"D:\\\\Output file\\\\num.jpg\";\n    ImageIO.write(number, \"jpg\", new  File(number1));\n    String ID = tesseract.doOCR(new  File(number1));\n    server.info(\"ID :\" + ID);\n    if (ID.length() < 11) {\n        docType = \"PASSPORT\";\n    }\n    BufferedImage DOB = defaultImage.getSubimage(1150, 393, 350, 55);\n    String DOB1 = \"D:\\\\Output file\\\\dob.jpg\";\n    ImageIO.write(DOB, \"jpg\", new  File(DOB1));\n    String DOB2 = tesseract.doOCR(new  File(DOB1));\n    server.info(\"DOB :\" + DOB2);\n    BufferedImage place = defaultImage.getSubimage(670, 493, 700, 65);\n    String place1 = \"D:\\\\Output file\\\\place.jpg\";\n    ImageIO.write(place, \"jpg\", new  File(place1));\n    String place2 = tesseract.doOCR(new  File(place1));\n    server.info(\"place :\" + place2);\n    ocrValues.add(0, ID);\n    ocrValues.add(1, docType);\n    ocrValues.add(2, firstnamevalue);\n    ocrValues.add(3, Lastnamev);\n    ocrValues.add(4, DOB2);\n    ocrValues.add(5, place2);\n}"},{"id":"SetDPI","implementation":"public void SetDPI() throws IOException {\n    String inputFilePath = \"D:\\\\Output file\\\\\" + fileNameinput + \".jpg\";\n    BufferedImage image = ImageIO.read(new  File(inputFilePath));\n    ImageWriter writer = ImageIO.getImageWritersByFormatName(\"jpeg\").next();\n    ImageWriteParam param = writer.getDefaultWriteParam();\n    param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);\n    param.setCompressionQuality(0.95f);\n    IIOMetadata metadata = writer.getDefaultImageMetadata(ImageTypeSpecifier.createFromRenderedImage(image), param);\n    Element tree = (Element) metadata.getAsTree(\"javax_imageio_jpeg_image_1.0\");\n    Element jfif = (Element) tree.getElementsByTagName(\"app0JFIF\").item(0);\n    jfif.setAttribute(\"Xdensity\", Integer.toString(300));\n    jfif.setAttribute(\"Ydensity\", Integer.toString(300));\n    jfif.setAttribute(\"resUnits\", \"1\");\n    metadata.mergeTree(\"javax_imageio_jpeg_image_1.0\", tree);\n    String filename = \"D:\\\\Output file\\\\DPI.jpg\";\n    try (FileImageOutputStream output = new  FileImageOutputStream(new  File(filename))) {\n        writer.setOutput(output);\n        IIOImage iioImage = new  IIOImage(image, null, metadata);\n        writer.write(metadata, iioImage, param);\n        writer.dispose();\n    }\n}"},{"id":"recognizeText","implementation":"public void recognizeText() throws Exception {\n}"},{"id":"setData","implementation":"public void setData() throws Exception {\n}"},{"id":"end","implementation":"public void end() {\n    server.setResultProperties(results);\n}"}],"conditionalActionDetails":[{"id":"isPDF","implementation":"/**\n\t * check file extension\n\t * @throws IOException\n\t * @throws AWTException\n\t */\npublic String isPDF() throws Exception {\n    fileNameinput = server.getParameters().get(\"docFile\");\n    Path inputFile = Paths.get(server.getCurrentDir(), fileNameinput);\n    String fileType = FilenameUtils.getExtension(inputFile.toString());\n    server.info(\"fileType \" + fileType);\n    String expMsg = \"File Error\";\n    if (fileType != null) {\n        if (fileType.contains(\"pdf\")) {\n            return \"Yes\";\n        } else {\n            BufferedImage defaultImage = ImageIO.read(Paths.get(inputFile.toString()).toFile());\n            ImageIO.write(defaultImage, \"jpg\", new  File(\"D:\\\\Output file\\\\\" + fileNameinput + \".jpg\"));\n            return \"No\";\n        }\n    }\n    return expMsg;\n}"}],"sdkMethods":[]}